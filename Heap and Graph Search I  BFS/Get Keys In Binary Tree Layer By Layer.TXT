Get the list of list of keys in a given binary tree layer by layer. Each layer is represented by a list of keys and the keys are traversed from left to right.
/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public List<List<Integer>> layerByLayer(TreeNode root) {
    List<List<Integer>> res = new ArrayList<>();
    if(root == null){
      return res;
    }
    Deque<TreeNode> queue = new ArrayDeque<>();
    queue.offerLast(root);
    while(!queue.isEmpty()){
      int size = queue.size();
      List<Integer> tempRes = new LinkedList<>();
      for(int i = 0; i < size; i++){
        TreeNode cur = queue.pollFirst();
        tempRes.add(cur.key);
        if(cur.left != null){
          queue.offerLast(cur.left);
        }
        if(cur.right != null){
          queue.offerLast(cur.right);
        }
      }
      res.add(tempRes);
    }
    return res;
  }
}
