Check if a given binary tree is completed. A complete binary tree is one in which every level of the binary tree is completely filled except possibly the last level. Furthermore, all nodes are as far left as possible.
/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public boolean isCompleted(TreeNode root) {
    if(root == null){
      return true;
    }
    Deque<TreeNode> queue = new ArrayDeque<>();
    queue.offerLast(root);
    boolean flag = false;
    while(!queue.isEmpty()){
      TreeNode cur = queue.pollFirst();
      if(cur.left != null){
        if(flag){
          return false;
        }
        queue.offerLast(cur.left);
      }
      else{
        flag = true;
      }
      if(cur.right != null){
        if(flag){
          return false;
        }
        queue.offerLast(cur.right);
      }
      else{
        flag = true;
      }
    }
    return true;
  }
}

// TC: O(n)
// SC: O(2^h)