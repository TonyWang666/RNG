/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */

//  passdown: left of root1 and right of root2; right of root1 and left of root2
//  curdo: check if root1 == root2
//  passUp: true or false
public class Solution {
  public boolean isSymmetric(TreeNode root) {
    if(root == null){
      return true;
    }
    return helper(root.left, root.right);
  }
  public boolean helper(TreeNode root1, TreeNode root2){
    if(root1 == null && root2 == null){
      return true;
    }
    if(root1 == null || root2 == null || root1.key != root2.key){
      return false;
    }
    return helper(root1.left, root2.right) && helper(root1.right, root2.left); 
  }
}

// TC: O(n)
// SC: O(height)