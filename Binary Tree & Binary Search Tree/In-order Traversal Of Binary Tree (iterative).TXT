In-order Traversal Of Binary Tree (iterative)
/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public List<Integer> inOrder(TreeNode root) {
    List<Integer> res = new ArrayList<>();
    if(root == null){
      return res;
    }
    Deque<TreeNode> stack = new ArrayDeque<>();
    while(root != null || !stack.isEmpty()){
      if(root == null){
        root = stack.pollLast();
        res.add(root.key);
        root = root.right;
      } else {
        stack.offerLast(root);
        root = root.left;
      }
    }
    return res;
  }
}

//TC: O(n)
//SC: O(n)