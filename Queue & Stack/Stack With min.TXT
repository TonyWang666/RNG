Enhance the stack implementation to support min() operation. min() should return the current minimum value in the stack. If the stack is empty, min() should return -1.
public class Solution {
  private Deque<Integer> stack;
  private Deque<Integer> minStack;
  public Solution() {
    stack = new ArrayDeque<>();
    minStack = new ArrayDeque<>();
  }
  
  public int pop() {
    if(stack.isEmpty()){
      return -1;
    }
    int cur = stack.pollLast();
    if(cur == minStack.peekLast()){
      minStack.pollLast();
    }
    return cur;
  }
  
  public void push(int element) {
    stack.offerLast(element);
    if(minStack.isEmpty()){
      minStack.offerLast(element);
    }
    else if(element <= minStack.peekLast()){
      minStack.offerLast(element);
    }
  }
  
  public int top() {
    return stack.isEmpty() ? -1 : stack.peekLast();
  }
  
  public int min() {
    return minStack.isEmpty() ? -1 : minStack.peekLast();
  }
}