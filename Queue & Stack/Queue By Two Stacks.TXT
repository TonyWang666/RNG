public class Solution {
  private Deque<Integer> s1;
  private Deque<Integer> s2;
  public Solution() {
    s1 = new ArrayDeque<>();
    s2 = new ArrayDeque<>();
  }
  public Integer poll() {
    if(isEmpty()){
      return null;
    }
    if(s2.isEmpty()){
      moveEle();
    }
    return s2.pollLast();
  }
  
  public void offer(int element) {
    s1.offerLast(element);
  }
  
  public Integer peek() { //done
    if(isEmpty()){
      return null;
    } 
    if(s2.isEmpty()){
      moveEle();
    }
    return s2.peekLast();
  }
  
  public int size() { //done
    return s1.size() + s2.size();
  }
  
  public boolean isEmpty() { //done
    return size() == 0;
  } 
  public void moveEle(){
    while(!s1.isEmpty()){
      s2.offerLast(s1.pollLast());
    }
  }
}