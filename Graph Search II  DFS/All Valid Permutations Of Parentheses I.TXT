public class Solution {
  public List<String> validParentheses(int n) {
    List<String> res = new ArrayList<>();
    helper(0, 0, n, new StringBuilder(), res);
    return res;
  }
  public void helper(int left, int right, int n, StringBuilder sb, List<String> res){
    if(right == n){
      res.add(sb.toString());
      return;
    }
    if(left < n){
      helper(left + 1, right, n, sb.append('('), res);
      sb.deleteCharAt(sb.length() - 1);

    }
    if(right < left){
      helper(left, right + 1, n, sb.append(')'), res);
      sb.deleteCharAt(sb.length() - 1);
    }
  }
}
// TC: O(2^2n)
// SC: O(n)