Delete In Binary Search Tree

Delete the target key K in the given binary search tree if the binary search tree contains K. Return the root of the binary search tree.

Find your own way to delete the node from the binary search tree, after deletion the binary search tree's property should be maintained.

/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public TreeNode deleteTree(TreeNode root, int key) {
    if(root == null){
      return null;
    }
    if(root.key == key){
      if(root.left == null){
        return root.right;
      }
      if(root.right == null){
        return root.left;
      }
      if(root.right.left == null){
        root.right.left = root.left;
        return root.right;
      } else {
        TreeNode mostLeft = findMostLeft(root.right);
        mostLeft.left = root.left;
        mostLeft.right = root.right;
        return mostLeft;
      }
    } else {
      if(root.key < key){
        root.right = deleteTree(root.right, key);
      } else {
        root.left = deleteTree(root.left, key);
      }
    }
    return root;
  }
  public TreeNode findMostLeft(TreeNode root){
    while(root.left.left != null){
      root = root.left;
    }
    TreeNode target = root.left;
    root.left = target.right;
    return target;
  }
}
