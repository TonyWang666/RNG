Given two nodes in a K-nary tree, find their lowest common ancestor.
/**
 * public class KnaryTreeNode {
 *     int key;
 *     List<KnaryTreeNode> children;
 *     public KnaryTreeNode(int key) {
 *         this.key = key;
 *         this.children = new ArrayList<>();
 *     }
 * }
 */
public class Solution {
  public KnaryTreeNode lowestCommonAncestor(KnaryTreeNode root, KnaryTreeNode a, KnaryTreeNode b) {
    if(root == null){
      return null;
    }
    if(root == a || root == b){
      return root;
    }
    int count = 0;
    KnaryTreeNode curNode = null;
    for(int i = 0; i < root.children.size(); i++){
      KnaryTreeNode tempNode = lowestCommonAncestor(root.children.get(i), a, b);
      curNode = tempNode != null ? tempNode : curNode;
      count = tempNode != null ? count + 1 : count;
    }
    if(count > 1){
      return root;
    } else {
      return curNode;
    }
  }
}
// TC: O(n)
// SC: O(n)